# notes and test scripts

#standardSQL
# broken scripts - to show examples
CREATE TEMPORARY FUNCTION parseJsonError(jsonText STRING)
RETURNS STRING LANGUAGE js AS '''
  try {
    jsonText = jsonText.trim();

    jsonText = jsonText.replace(/^\\/\\*(.*?)\\*\\//g, ''); // remove comment from start (could be for CDATA section)
    jsonText = jsonText.replace(/\\/\\*(.*?)\\*\\/$/g, ''); // remove comment from end (could be for CDATA section)

    if (jsonText.length == 0)
        return null; // empty scripts cause no errors, not perfect though
    JSON.parse(jsonText);
    return null;
  } catch (e) {
    return e;
  }
''';

SELECT 
  page,
  jsonld_script,
  invalid_json_scripts_error
 FROM (
  SELECT # row per script found
  page,
  jsonld_script,
  parseJsonError(jsonld_script) AS invalid_json_scripts_error # is the script parsable
  FROM `httparchive.sample_data.response_bodies_desktop_10k`, 
  UNNEST(REGEXP_EXTRACT_ALL(body, '(?i)<script[^>]*type=[\'"]?application\\/ld\\+json[\'"]?[^>]*>(.*?)<\\/script>')) AS jsonld_script
  WHERE page = url
  )
WHERE invalid_json_scripts_error IS NOT NULL
LIMIT 100;

---

